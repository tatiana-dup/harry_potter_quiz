# Generated by Django 3.2.25 on 2025-02-04 10:59

from django.db import migrations, models
import django.db.models.deletion
import quizzes.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Идентификатор страницы для URL; разрешены символы латиницы, цифры, дефис и подчёркивание.', max_length=15, unique=True, verbose_name='Слаг')),
                ('serial_number', models.PositiveSmallIntegerField(unique=True, verbose_name='Номер части')),
            ],
            options={
                'verbose_name': 'часть',
                'verbose_name_plural': 'Части',
                'ordering': ('serial_number',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('answer_requirements', models.TextField(blank=True, help_text='Пояснения или подсказка, каким должен быть ответ', null=True, verbose_name='Требования к ответу')),
                ('image', models.ImageField(blank=True, help_text='При необходимости вы можете добавить изображение до 3 МБ.', null=True, upload_to='quizzes/questions/images', validators=[quizzes.validators.validate_image_size], verbose_name='Изображение')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Легкий'), (2, 'Средний'), (3, 'Сложный'), (4, 'Очень сложный')], default=1, verbose_name='Сложность')),
                ('is_answer_in_book', models.BooleanField(help_text='В книгах есть ответ на этот вопрос?', verbose_name='По книгам')),
                ('is_answer_in_movie', models.BooleanField(help_text='В фильмах есть ответ на этот вопрос?', verbose_name='По фильмам')),
                ('is_active', models.BooleanField(default=True, help_text='Вопрос доступен пользователю?', verbose_name='Доступность')),
                ('part', models.ForeignKey(blank=True, help_text='Указать, если вопрос относится только к одной части.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='quizzes.part', verbose_name='Часть')),
            ],
            options={
                'verbose_name': 'вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ('difficulty_level', 'text'),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Идентификатор страницы для URL; разрешены символы латиницы, цифры, дефис и подчёркивание.', max_length=15, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='QuestionCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Идентификатор страницы для URL; разрешены символы латиницы, цифры, дефис и подчёркивание.', max_length=15, unique=True, verbose_name='Слаг')),
                ('description', models.TextField(verbose_name='Описание')),
                ('is_active', models.BooleanField(default=False, help_text='Коллекция доступна пользователю?', verbose_name='Доступность')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('pub_date', models.DateTimeField(help_text='Установить дату, когда коллекция должна бытьопубликована.', verbose_name='Дата публикации')),
                ('questions', models.ManyToManyField(related_name='collections', to='quizzes.Question', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'коллекция',
                'verbose_name_plural': 'Коллекции',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(related_name='questions', to='quizzes.Tag', verbose_name='Тэги'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст ответа')),
                ('is_correct', models.BooleanField(verbose_name='Это верный ответ?')),
                ('description', models.TextField(blank=True, help_text='Можно указать, почему этот ответ является верным или нет.', null=True, verbose_name='Пояснение')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'ответ',
                'verbose_name_plural': 'Ответы',
                'ordering': ('text',),
            },
        ),
    ]
